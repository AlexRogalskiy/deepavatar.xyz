{"version":3,"file":"static/webpack/static/development/pages/create.js.44c7a2659ffa4d37abd7.hot-update.js","sources":["webpack:///./pages/create.js"],"sourcesContent":["import React from 'react';\nimport validate from 'validate.js';\nimport Header from '../components/header';\nimport Divider from '../components/divider';\nimport Footer from '../components/footer';\nimport LoadingOverlay from '../components/loading-overlay';\n\nimport UploadImage from '../components/create/upload-image';\nimport SelectTransformation from '../components/create/select-transformation';\nimport EmailAddress from '../components/create/email-address';\n\nconst constraints = {\n  file: {\n    presence: {\n      allowEmpty: false,\n    },\n  },\n  transformation: {\n    presence: true,\n    inclusion: [\n      'candy',\n      'mosaic',\n      'rain',\n      'udnie',\n    ],\n  },\n  email: {\n    presence: true,\n    email: true,\n  },\n};\n\nexport default class extends React.Component {\n  state = {\n    running: false,\n    file: null,\n    transformation: null,\n    email: '',\n  };\n\n  isFormInvalid() {\n    return !!validate(this.state, constraints);\n  }\n\n  handleChange = (email) =>\n    this.setState({ email });\n\n  handleDrop = (file) =>\n    this.setState({ file });\n\n  handleSelect = (transformation) =>\n    this.setState({\n      transformation: transformation.key,\n    });\n\n  handleSuccess = (res) => {\n    if (res.status !== 200) {\n      return this.handleError();\n    }\n    this.setState({ running: false });\n    alert('Your image will be processed soon');\n  };\n\n  handleError = () => {\n    this.setState({ running: false });\n    alert('An error append...');\n  };\n\n  handleSubmit = () => {\n    this.setState({ running: true });\n    const formData = new FormData();\n    formData.append('picture', this.state.file);\n    formData.append('model', this.state.transformation);\n    formData.append('email', this.state.email);\n    window\n      .fetch(`${process.env.BACKEND_URL}/api/pictures`, {\n        method: 'POST',\n        body: formData,\n      })\n      .then(this.handleSuccess)\n      .catch(this.handleError);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <UploadImage\n          file={this.state.file}\n          onDrop={this.handleDrop}\n        />\n        <Divider />\n        <SelectTransformation\n          selected={this.state.transformation}\n          onClick={this.handleSelect}\n        />\n        <EmailAddress\n          disabled={this.state.running || this.isFormInvalid()}\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n          value={this.state.email}\n        />\n        <Footer />\n        <LoadingOverlay\n          visible={this.state.running}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AASA;AACA;AACA;AAFA;AAfA;AACA;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAUA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAMA;AACA;;;;;;AA1CA;AACA;AACA;;;AAyCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA5EA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}